{"version":3,"file":"plugins/plugin.resume.js","mappings":"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","sources":["webpack://@internetarchive/bookreader/./src/BookReaderPlugin.js","webpack://@internetarchive/bookreader/./src/util/docCookies.js","webpack://@internetarchive/bookreader/./src/plugins/plugin.resume.js"],"sourcesContent":["// @ts-check\n/** @typedef {import(\"./BookReader.js\").default} BookReader */\n\n/**\n * @template TOptions\n */\nexport class BookReaderPlugin {\n  /**\n   * @param {BookReader} br\n   */\n  constructor(br) {\n    /** @type {BookReader} */\n    this.br = br;\n    /** @type {TOptions} */\n    this.options;\n  }\n\n  /**\n   * @abstract\n   * @param {TOptions} options\n   **/\n  setup(options) {\n    this.options = Object.assign({}, this.options, options);\n  }\n\n  /** @abstract */\n  init() {}\n\n  /**\n   * @abstract\n   * @protected\n   * @param {import (\"./BookReader/PageContainer.js\").PageContainer} pageContainer\n   */\n  _configurePageContainer(pageContainer) {\n  }\n\n  /**\n   * @abstract\n   * @protected\n   * @param {JQuery<HTMLElement>} $toolbarElement\n   */\n  _configureToolbar($toolbarElement) {\n  }\n\n  /** @abstract @protected */\n  _bindNavigationHandlers() {}\n\n  /**\n   * @param {JQuery<HTMLElement>} $navBar\n   */\n  extendNavBar($navBar) {}\n}\n","/**\n * Helper module use to get, set and remove item from cookie\n *\n * See more:\n *  https://developer.mozilla.org/en-US/docs/Web/API/document.cookie\n *  https://developer.mozilla.org/User:fusionchess\n *  https://github.com/madmurphy/cookies.js\n *  This framework is released under the GNU Public License, version 3 or later.\n *  http://www.gnu.org/licenses/gpl-3.0-standalone.html\n */\n\n/**\n * Check to see if the browser has cookies enabled.\n * Accessing document.cookies errors if eg iframe with sandbox enabled.\n * @returns {boolean}\n */\nexport function areCookiesBlocked(doc = document) {\n  try {\n    doc.cookie;\n    return false;\n  } catch (e) {\n    return true;\n  }\n}\n\nconst COOKIES_BLOCKED = areCookiesBlocked();\n\n/**\n * Get specific key's value stored in cookie\n *\n * @param {string} sKey\n *\n * @returns {string|null}\n */\nexport function getItem(sKey) {\n  if (COOKIES_BLOCKED || !sKey) return null;\n\n  return decodeURIComponent(\n    // eslint-disable-next-line no-useless-escape\n    document.cookie.replace(new RegExp('(?:(?:^|.*;)\\\\s*' + encodeURIComponent(sKey).replace(/[\\-\\.\\+\\*]/g, '\\\\$&') + '\\\\s*\\\\=\\\\s*([^;]*).*$)|^.*$'), '$1')) || null;\n}\n\n/**\n * Set specific key's value in cookie\n *\n * @param {string} sKey cookie name\n * @param {string} sValue cookie value\n * @param {string} [vEnd] expire|max-age\n * @param {string} [sPath] path of current item\n * @param {string} [sDomain] domain name\n * @param {boolean} [bSecure]\n *\n * @returns {boolean}\n */\nexport function setItem(sKey, sValue, vEnd, sPath, sDomain, bSecure) {\n  if (COOKIES_BLOCKED) return false;\n\n  document.cookie = encodeURIComponent(sKey) + '=' + encodeURIComponent(sValue)\n  + (vEnd ? `; expires=${vEnd.toUTCString()}` : '')\n  + (sDomain ? `; domain=${sDomain}` : '')\n  + (sPath ? `; path=${sPath}` : '')\n  + (bSecure ? `; secure` : '');\n\n  return true;\n}\n\n/**\n * BROKEN Remove specific key's value from cookie\n * @fixme hasItem isn't even implemented! This will always error.\n * @param {string} sKey cookie name\n * @param {string} [sPath] path of current item\n * @param {string} [sDomain]\n *\n * @returns {boolean}\n */\nexport function removeItem(sKey, sPath, sDomain) {\n  if (COOKIES_BLOCKED) return false;\n  // eslint-disable-next-line\n  if (!hasItem(sKey)) return false;\n\n  document.cookie = encodeURIComponent(sKey) + `=; expires=Thu, 01 Jan 1970 00:00:00 GMT`\n  + (sDomain ? `; domain=${sDomain}` : '')\n  + (sPath ? `; path=${sPath}` : '');\n\n  return true;\n}\n","import { EVENTS } from '../BookReader/events.js';\nimport { BookReaderPlugin } from '../BookReaderPlugin.js';\nimport * as docCookies from '../util/docCookies.js';\n\n/* global BookReader */\n\n/** @deprecated Exposed for backward compatibility */\nBookReader.docCookies = docCookies;\n\n/**\n * Plugin to remember the current page number in a cookie\n */\nexport class ResumePlugin extends BookReaderPlugin {\n  options = {\n    enabled: true,\n    /** @type {string|null} eg '/', '/details/id' */\n    cookiePath: null,\n  }\n\n  /** @override */\n  init() {\n    if (this.options.enabled) {\n      this.br.bind(EVENTS.fragmentChange, () => {\n        const params = this.br.paramsFromCurrent();\n        this.updateResumeValue(params.index);\n      });\n    }\n  }\n\n  /**\n   * Gets page resume value, for remembering reader's page\n   * Can be overridden for different implementation\n   *\n   * @return {number|null}\n   */\n  getResumeValue() {\n    const val = BookReader.docCookies.getItem('br-resume');\n    if (val !== null) return parseInt(val);\n    else return null;\n  }\n\n  /**\n   * Return cookie path using pathname up to /page/... or /mode/...\n   * using window.location.pathname for urlPathPart:\n   * - matches encoding\n   * - ignores querystring part\n   * - ignores fragment part (after #)\n   * @param {string} urlPathPart - window.location.pathname\n   */\n  getCookiePath(urlPathPart) {\n    return urlPathPart.match('.+?(?=/page/|/mode/|$)')[0];\n  }\n\n  /**\n   * Sets page resume value, for remembering reader's page\n   * Can be overridden for different implementation\n   *\n   * @param {Number} index leaf index\n   * @param {string} [cookieName]\n   */\n  updateResumeValue(index, cookieName) {\n    const ttl = new Date(+new Date + 12096e5); // 2 weeks\n    // For multiple files in item, leave cookiePath blank\n    // It's likely we can remove cookiePath using getCookiePath()\n    const path = this.options.cookiePath\n      || this.getCookiePath(window.location.pathname);\n    BookReader.docCookies.setItem(cookieName || 'br-resume', index, ttl, path, null, false);\n  }\n}\n\nBookReader?.registerPlugin('resume', ResumePlugin);\n"],"names":["BookReaderPlugin","br","_classCallCheck","this","options","key","value","Object","assign","pageContainer","$toolbarElement","$navBar","areCookiesBlocked","doc","arguments","length","undefined","document","cookie","e","COOKIES_BLOCKED","getItem","sKey","decodeURIComponent","replace","RegExp","encodeURIComponent","setItem","sValue","vEnd","sPath","sDomain","bSecure","concat","toUTCString","removeItem","hasItem","BookReader","docCookies","ResumePlugin","_BookReaderPlugin","_this","_len","args","Array","_key","_callSuper","enabled","cookiePath","_inherits","_this2","bind","EVENTS","fragmentChange","params","paramsFromCurrent","updateResumeValue","index","val","parseInt","urlPathPart","match","cookieName","ttl","Date","path","getCookiePath","window","location","pathname","_BookReader","registerPlugin"],"sourceRoot":""}